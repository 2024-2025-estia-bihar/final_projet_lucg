name: CI/CD Pipeline

on:
    push:
        branches: [master, develop]
    pull_request:
        branches: [master, develop]
    workflow_dispatch:

jobs:
    lint:
        name: Lint Code
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                    python-version: '3.11'
                    cache: 'pip'

            - name: Install dependencies
              run: |
                    python -m pip install --upgrade pip
                    pip install flake8 black isort
                    pip install -r requirements.txt

            - name: Lint with flake8
              run: |
                    # Stop compilation on syntax errors or undefined variables
                    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                    # Treat warnings as errors only during PRs
                    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: Check code style with black
              run: |
                    black . --check --diff --line-length=100 --exclude="env/|venv/|.venv/"

    test:
        name: Run Tests
        runs-on: ubuntu-latest
        needs: lint
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                    python-version: '3.11'
                    cache: 'pip'

            - name: Install dependencies
              run: |
                    python -m pip install --upgrade pip
                    pip install pytest pytest-cov
                    pip install -r requirements.txt

            - name: Test with pytest
              run: |
                    mkdir -p logs model/registry
                    pytest api/tests/ --cov=. --cov-report=xml -v

            - name: Upload coverage report
              uses: codecov/codecov-action@v3
              with:
                    file: ./coverage.xml
                    fail_ci_if_error: false
                    verbose: true

    versioning:
        name: Versioning
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.versioning.outputs.version }}
            imageName: ${{ steps.versioning.outputs.imageName }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Compute versions
              id: versioning
              run: |
                    version=$(git rev-parse --short HEAD)
                    imageName=ghcr.io/teamlezard/le_djai_back:$version
                    echo "version=$version" >> $GITHUB_OUTPUT
                    echo "imageName=$imageName" >> $GITHUB_OUTPUT
                    echo "The image name: '$imageName'"
                    echo "## ðŸ”– New version '$version'" >> $GITHUB_STEP_SUMMARY
                    echo "## ðŸ“¦ Image '$imageName'" >> $GITHUB_STEP_SUMMARY

    build-and-push:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        needs: [versioning]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build and push Docker image
              run: |
                    echo "${{secrets.TOKEN}}" | docker login ghcr.io -u "${{github.actor}}" --password-stdin
                    docker build -t ghcr.io/2024-2025-estia-bihar/final_projet_lucg:${{needs.versioning.outputs.version}} .
                    docker push ghcr.io/2024-2025-estia-bihar/final_projet_lucg:${{needs.versioning.outputs.version}}
                    docker tag ghcr.io/2024-2025-estia-bihar/final_projet_lucg:${{needs.versioning.outputs.version}} ghcr.io/teamlezard/le_djai_back:latest
                    docker push ghcr.io/2024-2025-estia-bihar/final_projet_lucg:latest